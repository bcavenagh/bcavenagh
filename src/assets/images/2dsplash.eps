%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (ila) ()
%%Title: (Inkblots.eps)
%%CreationDate: 7/25/2010 2:43 AM
%%Canvassize: 16383
%%BoundingBox: -9 28 563 561
%%HiResBoundingBox: -8.83057 28.582 562.1992 560.0698
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 275.5 287.7803 275.5 287.7803
%AI3_TileBox: -22.1602 -132.6797 573.1602 709.2402
%AI3_DocumentPreview: Header
%AI5_ArtSize: 581 614
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -290 663.2803 1 1219 865 18 0 0 48 116 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 120 8
%%BeginData: 19791 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD44FFA85227207DFD7AFF7D5252F827F852FD79FF527DF8272727
%F8A8FD77FF7D592727F827F82752FD77FF7D525220272727207DFD77FF53
%522727F827F8277DFD77FFA852522727F82727A8FD77FFA8525227F827F8
%52FD6DFF527DA8FD09FF525227272052FD53FFA8FD19FF5227F852FD09FF
%A82727F852A8FD50FFA87D522727527DA8FD14FFA8532727F8A8FD0AFFA8
%FD51FFAF5227F827F827F827F852A8FD12FFA85227F8277DFD5BFFA82727
%20272727202727272052A8FD12FF7D522720FD5BFFA8F827F827F827F827
%F827F827F8277DFD11FFA87D277DFD5BFF2727F8272727F8272727F82727
%27F827A8FD19FFA87D525227527DFD4EFF5227F827F827F827F827F827F8
%27F827F827A8FD17FF7D27F827F827F82727FD4CFFA82727272027272720
%2727272027272720272752FD16FFA827205227272027272752FD0BFF7D7D
%52527DFD3BFF7DF827F827F827F827F827F827F827F827F827F87DFD08FF
%5952A8FD0AFF52F87DFFA8F827F827F827A8FD08FFA82727F827522727FD
%3AFF2727F8522727F8272727F8272727F8272727F82727FD07FFA827F827
%A8FD08FFA9F827FFFF52272727F82727A8FD07FF7DF8272727F8527D2752
%FD38FFA827F8275227F827F827F827F827F827F827F827F82752FD07FF27
%27F827A8FD07FF7D2752FF7D27F827F827F8277DFD06FF7DF827F827F827
%F87D7D277DFD37FFA82727527D2727202727272027272720272727202727
%27A8FD06FF7D2027277DFD07FF7D20FFFF5220272727202727FD06FFA827
%2720272727202752FF207DFD37FF7D27F87E5227F827F827F827F827F827
%F827F827F827F852FD06FFA827F827F8A8FD06FF2727FF7DF827F827F827
%F852FD06FF2727F827F827F827F827A82752FD37FF7DF827A87DF8272727
%F8272727F8272727F8272727F82727A8FD06FF5227F82752FD06FF277DFF
%F8272727F82727277DFD05FF7D27F8272727F827272752FF277DFD37FF7D
%27F8A87D27F827F827F827F827F827F827F827F827F82728FD06FFA8F827
%F82759FD04FFA8F8A85227F827F827F82727FD05FFA827F827F827F827F8
%27F8A87D277DFD37FFA82027A8A820272727202727272027272720272727
%202727277DFD06FF52202727277DFFFFFF52277D27202727272027277DFD
%05FFA827272027272720272752A82752FD0CFFC4BDBEBDCAFD27FFA827F8
%7DFF27F827F827F827F827F827F827F827F827F827F827A8FD05FF7D27F8
%27F82752A85227277DF827F827F827F8277DFD05FF2827F827F827F827F8
%27A852F8A8FD0AFFA2BD9BBD8EB28EBDCAFD26FF522727FF7D27F8272727
%F8272727F8272727F8272727F8272752FD05FFA82727F8272727F8FD0727
%F8272727F8AFFD04FFA827F8272727F8272752845227A8FD0AFFCAB7C4BE
%B2B28EB2B2C4FD26FFA8F8277DFF2727F827F827F827F827F827F827F827
%F827F827F852A8FFFFFF7D27F8522727F827F827F827F827F827F827F827
%A8FD04FFA8F827F827F827277D7D27F8A8FD0BFFB7A1BD8EB28EB28EB295
%FD27FF7D2027FFFF21272727202727272027272720272727202727272052
%7DA87D522727A8FF7D7D525227272027272720FD0427FD05FF7D27202727
%52527D282752FD0CFFCAB7C48FB7B2B28FB7B2B7FD28FF52F852FFFF5227
%F827F827F827F827F827F827F827F827F827F827F827F827527D277D5252
%2727F827F827F827F827F827A8FD04FFA8F82727522727F852A8FD0DFF9B
%C49BB28EB28EB28EB295FD29FF52F827A8FFA8845252F8272727F8272727
%F8272727F8272727F8FD0427A82727F8272727F8272727F8272727F82727
%A8FD05FF53272727527DFD10FFBDC3B7B2B28EB2B2B28EC4FD2AFF7DF827
%277DA8FFA9A87D7D5227F827F827F827F827F827F827F827277D2727F827
%F827F827F827F827F827F827F82727FD06FFA8A2CBFD12FF95C48EB28EB2
%8EB28EB2A2FD2BFFA8522720272752527E7EA8A8A8522720272727202727
%272027272720272727202727272027272720272727202727277DFD05FFBD
%B28FC4FD10FFCBBDC3B7B2B28FB7B2B2BDFD2EFFA87D2727F827F827F827
%527D7D522727F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F8277DFFFFFF95B28EB28EC4FD10FF95C48EB28EB28EB295FD21
%FFCFCDCECFFD0DFFA8A87D7D52522727F8275252FD0427F8272727F82727
%27F8272727F8272727F8272727F8272727F82727277DFFC4B28EB2B2B28E
%CBFD0FFFB7BDB78EB2B2B295FD20FFCFCDC6FEC6FEC8FD13FFA8A85227F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F82727B78EB28EB28EB295FD0FFFA1B28EB28EB29BFD21FFCFFD06FECC
%FD16FF5220272727202727272027272720272752FD042720272727202727
%27202727272052B2B28FB7B2B28FB7A8FFA8A87DA87D7D52525259525252
%A8CAC4BDCACBFD22FFC7FEC6FEC6CC9FA5A0FD13FFCFCDC651F827F827F8
%27F827F827F827279B8E957027F827F827F827F827F827F827F8274CB28E
%B28EB28EB28E52F827F827F827F827F827F8274B27F853FD26FFCCC6FEA5
%52FD05277DA8FD10FFCDC6FE7C27F8272727F8272727F827279B8EB2B2B2
%94272727F8272727F8272727F827279B8EB2B2B28EB2B2B24C272727F827
%2727F82727779BB7B29BF87DFD25FFC7FE7B27F827F827F827F8277DFD0E
%FFCEC6FEC6C7F827F827F827F827F827F8528EB28EB28EB27027F827F827
%F827F827F827F82770B28EB28EB28EB28E9B525952FD047DA87DA19BBD8E
%B28E5227FD25FFCDA427272720272727202727277DFD0DFFCDFEFEFEA527
%2027272720272727202752B28FB7B2B28FB7762720272727202727272027
%279B8FC4C4B28FB7B2B29BA87D847D7D7D532777BDBE8FB7B2B27027FD25
%FFCE7CF827F827F827F827F827F827A8FD0BFFCFCCC6FEA552F827F827F8
%27F827F827F8768EB28EB28EB28EB22727F827F827F827F827F82794B2A1
%CB8EB28EB28E76F827F827F827F82770C48EB28EB28E76F8FD26FF5227F8
%272727F8272727F827277DFFFFA87D527D527D527D527D517C5127F82727
%27F8272727F8FD0427B7B2B28EB2B2B28E9B2727F8272727F8272727F89B
%B2C4CAB2B2B28EB27627F8272727F82727C49BB2B2B28EB24C27FD26FF52
%F827F827F827F827F827F82752FF7D27F827F827F827F827F827F827F827
%F827F827F827F827F827F82770B28EB28EB28EB28E4BF827F827F827F827
%F82770B29BCA8EB28EB28E52F827F827F827F8529BB78EB28EB2702728FD
%26FF52272027272720272727207D277DCF7D272720272727202727272027
%27272027272720272727202727272052B2B28FB7B2B28FB7762720272727
%20272727209BB2C4CAB7B2B28FB74C2720272727202776BE8FB7B2B28F52
%27A8FD26FF7EF827F827F827F827277D5227C6FE5227F827F827F827F827
%F827F827F827F827F827F827F827F827F827F8768EB28EB28EB28E9BF827
%F827F827F827F82770B29BCA8EB28EB28E27F827F827F827F87695B78EB2
%8E4CF87EFD28FF52537D2727275259A82827A5FEFECC51272727F8272727
%F8272727F827527D52272727F8272727F8272727F877B2B28EB2B2B29427
%2727F8272727F82727768EBDC4B28EB2B29BF8272727F8FD0427B7B2B294
%7652A8FD16FFCACAC3C4C4FD0EFF845252FD047D52F852A4FEC6FEC6FE7B
%7C5152275127512727F827F827277EA852F827F827F827F827F827F8528E
%B28EB28EB22727F827F827F827F8274CB294C48EB28EB2702727FD04527D
%527D7DC4A1A8A8FD15FFCAC494B28EB28EB295CBFD0DFFA8522752272751
%C8FD0DFECCFECCC7CDA07C272720A8FF5220272727202727272027275270
%B7B2B28F52272720272727202727528FBDBDB28FB7B2C4A8FD06FFC4C3FD
%19FFBDB28FB7B2B28FC4C4B2BDFD04FFCFFD0BFFA8C8C6FEC6FEC6FEC6FE
%C6FEC6FEC6FEC6FEC6FEC6FEC6FEC6A62727F8FF5927F827F827F827F827
%F827F8274B9B8E95F827F827F827F827F8274CB28EBD8EB28EB2A1FD06FF
%BD8EB295FD16FFCA8EB28EB28EB28EB28ECB9BB2FFCFCFCECECEFD0BFFCF
%FEFEFEC6FEFEFEC6FEFEFEC6FEFEFEC6FEFEFEC6FEFEFEC6A62727A87D27
%27F8272727F8272727F8272727F85227764C272727F8272727F876B2B795
%B2B2B28EC4FD05FFC48EB2B2B2CAFD14FFC4B2B28EB2B2B28EB2B2B2CAC4
%B2CFCCC7CDC8CEC8CEFD0AFFC7FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FE
%C6FEC6FEC6FEA427F884F827F827F827F827F827F827F827F827F8278EB2
%4C27F827F827F8274CB28EB28EB28EB29BFD04FFCB8EB28EB28EFD14FFBD
%8EB28EB28EB28EB28EB295FF8EBDCDFD05FECECDCFFD09FFCEFD17FEC84C
%A1775227272027272720272727202727272027279B8FB74C272027272720
%9BB2B28FB7B2B28F9B59A8A8FFBDB28FB7B2C4FD13FFBE8FB7B2B28FB7B2
%B28FB7B2FFC4B7C4C6FEC6FEC6FEC6CDC8FFCFCFCFFD05FFC8FEC6FEC6FE
%C6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC7BD94B78EB28EB77027F827F827
%F827F827F827F827F82727B78EB72727F827F8528EB28EB28EB28EB28E27
%F82752B28EB28EB2C4FD12FFC48EB28EB28EB28EB28EB28ECAC4B29BFFCC
%FEFEC6FEFEFEC6CEFFCCC6FEFECDCECFCECCC6FEFEFEC6FEFEFEC6FEFEFE
%C6FEFEFEC6FEFEFEC2B2BDCA9BB2B2B28EB28F52F8272727F8272727F827
%2727F82752B28E9B2727F82795B28EB2B2B28EB2B2B2702727B78EB2B2B2
%95FD12FFC48EB2B2B28EB2B2B28EB2BDCBC3B2BDFFFFC9FEC6FEC6FEC6CD
%FFCEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FE
%C2B29BCB8EB28EB28EB28EB28E27F827F827F827F827F827F827F82770B2
%8E9B274C70B28EB28EB28EB28EB28EB270958EB28EB28EC4FD11FFCA8EB2
%8EB28EB28EB28EBDA1C495B2A1FD04FFCFCECDCECECFFFFFCEFD1BFEC7B2
%BDFFB2B28FB7B2B28FB7B2B2762727272027272720272727202727528FB7
%B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B2CAFD11FFB7B28FB7
%B2B28FBDBDC4C3BDB2C4CBFD0EFFC8FEC6FEC6FEC6FEC6FEC6FEC6FEC6FE
%C6FEC6FEC6FEC6FEC6FEC6C38ECA9BB28EB28EB28EB28EB28E95F827F827
%F8272727F827F827F827F8958EB28EB28EB28EB28EB28EB28EB28EB28EB2
%8EB28EB795CBFD0AFFC4C49BCAFFFFA2B28EB28EBD9BBD9BBD95B79BFD12
%FFCFCDC6FEFEFEC6FEFEFEC6FEFEFEC6FEFEFEC6FEFEFEC6FEFEFE94BECA
%B28EB2B2B28EB2B2B28EB29527F827277794B7764CF8272727F82776B28E
%B2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B79BB2CAFD07FFCAC495B2B2
%B28ECAFFCB8FB2B2B795BDBDBEC4FD17FFCFC6CDC8FEC6FEC6FEC6FEC6FE
%C6FEC6FEC6FEC6FEC6FEC7B2A1C48EB28EB28EB28EB28EB28E95F8272095
%8EB28EB28E27F827F827F8768EB28EB28EB28EB28EB28EB28EB28EB28EB2
%8EB295C48EBDCAFFFFFFCAC495B28EB28EB28EB29BFFFFCBA2C4A2CAA8FD
%1BFFCFFECFCEFD10FECCFEC88FCABDB28FB7B2B28FB7B2B28FB77627209B
%B2B28FB7B2B295522727202776B28FB7B2B28FB7B2B28FB7B2B28FB7B2B2
%8FB7B2BECAB7B2B7C3C4BDB78FB7B2B28FB7B2B28FC4FD23FFCFFEC7FFC6
%FEC6FEC6FEC6FEC6FEC6FEC6C87552272776B2A2B78EB28EB28EB28EB28E
%B28E76F8768EB28EB28EB28EB28E772727279B8EB28EB28EB28EB28EB28E
%B28EB28EB28EB28EB295FF9BB28EB28EB28EB28EB28EB28EB28EC4FD24FF
%CFC6CDCFCCC6FEFEFEC6FEFEFEC6FEFE7CF8272727F876B2CA95B2B2B28E
%B2B2B28EB2B2B7272795B28EB2B2B28EB2B2B28EB79BBD8EB2B2B28EB2B2
%B28EB2B2B28EB2B2B28EB2B2B28EB2C4FFC4C4BDB78EB2B2B28EB2B2B29B
%CBFD25FFC7FEC9CEC6FEC6FEC6FEC6FEC6FEA452F827F827F8274BB2A2B7
%8EB28EB28EB28EB28EB270274BB28EB28EB28EB28EB28EB28EB28EB28EB2
%8EB28EB28EB28EB28EB28EB28EB28EB28EB28EB295C49BBD8EB28EB28EB2
%8EC4CAFD26FFCDFECDCFFD0BFE7C2727202727272077B2C4BDB7B2B28FB7
%B2B28FB79527209BB2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B2
%8FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2BDC4FD27FFCEC6
%FEC7CEC6FEC6FEC6FEC6FEC6FEC6CC2027F827F827F82777B29BC48EB28E
%B28EB28EB2944CF8278EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28E
%B28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EC4FD27FFCECC
%FEFEC6CCFEFEC6FEFEFEC6FEFEFEC6FEA527F8272727F8277D5271B2BDB2
%8EB2B2B28EB29B53F8274BB28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2
%B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B7CBFD25FFCA
%CEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FE2727F827F85252520D
%148EB28EB28EB28EB29A83F827F8528EB28EB28EB28EB28EB28EB28EB28E
%B28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28ECAFD
%25FFCECCFD15FEC82727277D5252591B151B77B78FB79BC4C7FE51272027
%52B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B2
%8FB7B2B28FB7B2B28FB7B2B28FB7CAFD24FFCEFEC6FEC6FEC6FEC6CDC9CF
%C7FEC6FEC6FEC6FEC6FEC6FEC6FE7B7C7C7C143D6115141B1415143DFFCD
%9F27F827F8528EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB2
%8EB28EB28EB28EB28EB28EB28EB28EB28EB28EC4FD0AFFCACBC4C4A2CBFD
%13FFCFFEFEFEC6FEFECCCEFD04FFCFFEFEC6FEFEFEC6FEFEFEC6FEFEFEC6
%FEFEA7141B611B141B151B14FFCF52F8272727F89BB2B28EB2B2B28EB2B2
%B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28E
%B2B2B28FFD07FFC4C4B7B28EB2B2B28EB7C3FD11FFCFC6FEC6FEC7CECFFD
%05FFCAFEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6CC131B141B141B141B
%CFA8F827F827F8274BB28EB28EB28EB7959B8EB28EB28EB28EB28EB28EB2
%8EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EC4CACAA1C48EB2
%8EB28EBD9BC4A1BD8EB28EC4FD10FFCECDCECFFD09FFFD07FECCFEFEFECC
%FD08FEA5831A1B151B85FF7D2720272727207DCA9B709B785A141B15A28F
%B7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2
%B28FB7B2B28FB7B2B7BDC4CAFFFFFFCAFFFFFFBDB28FC4FD1BFFC8FEC6FE
%C6FEC6FEC6CCC7FEC6FEC8CDC6FEC6FEC6FEC6FEA4CDA7FFFF52F827F827
%F8277DA8F827281B1415141B71B28EB28EB28EB28EB28EB28EB28EB28EB2
%8EB28EB28EB28EB28EB28EB28EB28EB28EBD9BC4A2CACACAA2C49BB78EB2
%8EB7A2FFA1B28ECAFD19FFCEFD05FEC6FEFEFECCCECECDCECECCFEC6CDFE
%FEC6FEFEFEC6FECFFFFD0427F82727FF52272735141B151B54B2B2B28EB2
%B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B2
%8FBDB7BD95B7B2B28EB2B2B28EB2B2B2C3FFBDB28FFD18FFC8FEC8CCC6FE
%C6FEC6FEC6FEC6CDCFCDC6FEC6FEC8CDC6FEC6FEC6FEC6CCA827F827F827
%F8272827F8271415141B54B28EB28EB28EB28EB28EB28EB28EB28EB28EB2
%8EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB2
%8EB28EB2A1FF8EB29BFD15FFCFFEFECECDFD08FECCFEFECDFEFECDCFCCCC
%CFCCFD05FECC825AF82727272027272720272E1B151B77B28FB7B2B28FB7
%B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B2
%8FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7FFC48FBDFD13FFCFCDC6CCC9
%CDC6FEC6FEC6FEC6CDCFFFC8FEC6FEA5FFAFFFA5CEAECCA5AC825F141B14
%27F827F827F827F827F814145A8EB28EB28EB28EB28EB28EB28EB28EB28E
%B28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28E
%B28EB28EB28EB28EB28EC4CAB28ECBFD11FFCDFEC6CECFCDC6FEFEFEC6FE
%FECDFFFFFF85131B141B141B151B141B151B141B151B141B2727F8272727
%F827275253BDB2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2
%B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B2
%8EB2B2B295CBB2B2C4FD0FFFCFC7FEC8CFC9FEC6FEC6FEC6FEC6FECFFFA8
%1B1415141B1415141B1415141B1415141B14151452F827F827F827217694
%B28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28E
%B28EB28EB795B28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28EB28E
%B2A2B78EC4FD0EFFCFFEFECFFFCDFD09FECCFFFF61151B1B8B858B618B85
%8B858B858B618B3D1B151B14272027272752B7B2B28FB7B2B28FB7B2B28F
%B7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7C4BD8FB7B2
%B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FB7B2B28FC4B7B2BDFD0DFFCF
%C6CCCFCFC6FEC6FEC6FEC6FEC6FEC6CEFFFF141B3CAF361B141B141B141B
%141B141B141B1415141B2F27F85294B28EB28EB28EB28EB28EB28EB28EBD
%9BB78EB28EB28EB28EB28EB28EB28EB28EB28EB28EB295C48EB28EC4C4BD
%8EB28EB28EB28EB28EB28EB28EB28EB28EB28EB79BB28EC4FD0DFFC6CCFF
%CEC6FEFEFEC6FEFEFEC6FEFEFECEFFFF1B14AF151B141B151B141B151B14
%1B151B141B151B141B13538EB2B2B28EB2B2B28EB2B2B28EC4C4CAC3BDB2
%B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2C49BB2B7FD04FFCB95B2
%B2B28EB2B2B28EB2B2B28EB2B2B28EB2B2B78EB2C4FD0CFFC8FECACEC6FE
%C6FEC6FEC6FEC6FEC6FEC6CFFFFF141560611415141B1415141B1415141B
%1415141B141514148EB28EB28EB28EB28EB28EB29BCBA2C48EB28EB28EB2
%8EB28EB28EB28EB28EB28EB28EB28EB295C4CABD8EC4FD06FF95B28EB28E
%B28EB28EB28EB28EB28EB28EB28EB28EC4FD0BFFCFFECEFFFD0DFECCFFFF
%FF61151B1B1B151B151B151B151B151B151B151B151B151B9BB28FBEB2B2
%8FB7B2B28FC4CBCBBDB7B2B28FB7B2BD95B7B2B28FB7B2B28FB7B2B28FB7
%B2B7BDCAC4C4BDB7BDFD07FFB7B28FB7B2B28FB7B2B28FB7B2B28FB7B2B2
%8FB7CAFD0BFFCEC6CFC8FEC6FEC6FEC6FEC6FEC6FEC6FEC7FFFFFFAF1B14
%1B1415141B1415141B1415141B1415141B141514B28EC49BB28EB28EB29B
%CBA2BD8EB28EB2957EA23D141BA8CA9BB28EB28EB28EB28EB28EB295B78E
%B28EB28EB2C4FD07FF95B28EB28EB28EB28EB28EB28EB28EB28EB295FD0C
%FFCCCCFFCCC6FEFEFEC6FEFEFEC6FEFEFEC6CEFD05FF85141B151B141B15
%1B141B151B141B151B141B15368EB7CAB78EB2B2BDCACBBDB28EB2B29C36
%1B1BAF141BFD04FFC4B28EB2B2B28EB2B2B28EB2B2B28EB2B2B28EB2CAFD
%07FFB7B28EB2B2B28EB2B2B28EB2B2B28EB2B2C4FD0BFFCFFEC8FFC6FEC6
%FEC6FEC6FEC6FEC6FEC6FEC9FD07FFA9FFAFFFA9FFFFFFAFFFA961141B14
%15141B14B28EFF9BB29BCACAC48EB28EB277141415141B841560FD05FFA2
%B28EB28EB28EB28EB28EB295C495B28EB28EB7CAFD07FF8FB28EB28EB28E
%B28EB28EB28EB28EB2CAFD0BFFCFFECECFCCFD0DFECFFD13FFAF151B151B
%151B95B7BDFFCBCBC4B28FB7B29B361B151B151B153D1561FD06FFBDB7B2
%B28FB7B2B7BDB7BDFFFFFFC4B28FB7B2BDFD08FF95B7B2B28FB7B2B28FB7
%B2B28FB7C3FD0CFFCFFEC7FFC6FEC6FEC6FEC6FEC6FEC6FEC6CCCFFD13FF
%3C1B1415141B14778EB28EB78EB28EB2955A1415141B1415141B141514CA
%FD05FFCA8EB28EB28EB28EC48ECAFD04FFC4B28EB28EBDFD08FF9BB28EB2
%8EB28EB28EB28EB295FD0EFFFEFECFCDFEFEC6FEFEFEC6FEFEFEC6FECDFD
%10FFAF611B151B141B151B141B14B28EB2B2B28EBD5A1B141B151B141B15
%1B141B5AB78EC4FD05FFB78EB2B2B28EB2C4B7C4FD05FFCAB28EB2B2CBFD
%08FFC4B7B2B28EB2B2B28EB2B7FD0EFFCFCCC6CEC9FEC6FEC6FEC6FEC6FE
%C6FEC6CFFD0EFF601B1415141B1415141B1415141B53B28EB7715A141B14
%15141B1415141B141577B295B28ECBFD04FF95B28EB28EB28ECA95C4FD06
%FFCAB78EB2A2FD09FFA8C495B28EB28EB79BFD10FFCEFEFECFCDFD0AFECD
%FD0EFF611B151B151B151B151B151B151B151B141B141B151B151B151B15
%1B151B151B77B7BDB78FB7A2FD04FFBE8FB7B2B28FB7CABDC3FD07FFCBC4
%C4FD0DFFCACBC4CBCBFD12FFC6FEC6CDC6FEC6FEC6FEC6FEC6FEC9FD0DFF
%A915141B1415141B1415141B1415141B1415141B1415141B1415141B1415
%14AF9BB79BB28EB28E7EA9FFFFFF9BB28EB28EB294FF9BBDFD2EFFCEFEFE
%C6FEFEFEC6FEFEFEC6FECDFD0EFF8B151B141B151B141B151B141B151B14
%1B151B141B151B141B151B141B151BC3B7C4B28EB2B2B2A1FD04FFC4B2B2
%8EB2B2BEFFBEBDFD2FFFCDC6FEC6FEC6FEC6FEC6FEC6FD0FFF841B141514
%1B1415141B1415143DFF85141B1415141B1415141B1415141B5AB2A1B78E
%B28EB28EC4601B141B77B28EB28EB2A1FF95BDFD30FFCEFD08FECCFD11FF
%151B151B151B151B151B1561FFFFFF1B151B151B151B151B151B151B1595
%BDC4B2B28FB7B2B2A21B151B149CB2B28FB7B2CBFFB7BDFD11FFCAC4C4FD
%1DFFCEC7FEC6FEC6FECDFD12FF3D1415141B1415141B141BFD04FF361B14
%15141B1415141B1415145A8EC48EB28EB28EB28E7E141B141571B28EB28E
%B2FFFF8EC4FD11FFBD8EB295C4CAFD1CFFCFCFCECFCFFD0DFFAFAFAFFFFF
%FFAF1B151B141B151B141BAFFD04FF3D141B85FFFF8B151B141B151B71C4
%C4B28EB2B2B28EB2A83D1B1B159C8EB2B2B28EC4BDB2C4FD07FFCAFD09FF
%B7B28EB2B7C4C4FD2AFF601B141B14151461A9FF841B1415141B141536FD
%05FF141514FD04FF851415141B14B2A1BD8EB28EB28EB28EFF603D141B53
%B28EB28EB28EB295FD07FF9BB79BFD08FFBD8EB28EB28EBDA1CBFD26FFAF
%151B151B151B151B151B85FFAF1B151B151B15FD06FF1B15AFFD05FF1B15
%3D15368FCBB7B28FB7B2B28FBEFFFF613D1B1B95B7B2B28FB7B7FD07FFCA
%B28FC4C4FD07FFC4B28FB7B2B28FBEC4FD25FFAF141B1415141B1415141B
%141584FFFF85141B3DFD06FF8B141BFD06FF8515143D14B2A8B78EB28EB2
%8EB2A1FFFFFF8461618495B28EB79BFD08FFCA8EB28EBEC4FD06FFCA8EB2
%8EB28EB28EC4C4FD24FF3D1B141B151B141B151B141B151BFD0CFF1B1B61
%FD07FF151B6136B2CB9BB2B2B28EB2B2FD09FFCACBFD0AFFC4B2B2B295CA
%FD06FFCBB7B2B28EB2B2B28ECACAFD22FFA91B141B141B1415141B141514
%1B1485FD0AFFAF1514FD08FF1B1485368FA1CA8EB28EB28EC4FD15FFCB8E
%B28EB2A2FD07FF9BB28EB28EB28EB29BCACBFD22FF153D1B1B151B151B15
%1B151B151B61FD0BFF61AFFD08FF3D1B618B77B2CAC4B2B28FBEFD17FFC4
%B2B28FFD09FFB2B28FB7B2B28FBEC4FD23FF1B1461141B1415141B141514
%1B1461FD0AFF3D85FD09FF61143DA91B95B29BBD8EBDCAFD18FFC49BCAFD
%09FFC48EB28EB28EB29BCACAFD22FF3D1B851B141B151B141B151B141BAF
%FD09FF141B15FD09FF851B15FF141B779595A2FD26FFCBB7B2B28EB2B2CA
%9BFD23FF8514853C15141B1415141B141514FD09FF1415141B85FD09FF14
%1B141B141B141514FD27FFA8B28EB28EBD95BDFD24FF1B15AF1B1B151B15
%1B151B15FD09FF611B151B15AFFD09FF3D151B151B151B153DFD0FFFCBFD
%18FFCABD8FB7B2BDFD25FFA91B14AF601B141B141B14AFFD08FF851B1415
%141B85FD09FF841B1415141B14153CFD0EFFC48EBDFD19FFCAA1C4CBFD26
%FFA91B153D613D151B61FD0AFF1B141B151B14AFFD0AFF141B151B141B15
%AFFD0EFFB7B28ECAFD43FFA985143D3685A9FD0AFF8B1415141B1415A8FD
%0AFFAF141B1415141BFD0EFFA8B28EB29BFD54FF1B1B151B151B15FD0CFF
%AF1B1B151BFD0FFFCAB2B28FB7CAFD52FFA91B1415141B143DFD0EFF85AF
%FD10FF9BB28EB28EC4FD52FFAF141B151B141B85FD20FFC48EB2B2B29BFD
%52FF8515141B141514FD21FFA1B28EB28EC4A8FD52FF151B151B15FD22FF
%CB8FB7B2B7C4FD53FF61141B14AFFD23FFB78EB7A1C4FD54FFAF85FD25FF
%CAB795C4CBFD7CFFCACACAFD2AFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Trail  ver4.2 for Win AICS4) (FILTERiT4 Live Trail ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Tiling  ver4.2 for Win AICS4) (FILTERiT4 Live Tiling ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 DropShadow  ver4.2 for Win AICS4) (FILTERiT4 Live Shadow ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Reflections  ver4.2 for Win AICS4) (FILTERiT4 Live Reflections ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Neon  ver4.2 for Win AICS4) (FILTERiT4 Live Neon ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Generation  ver4.2 for Win AICS4) (FILTERiT4 Live Generation ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Galaxy  ver4.2 for Win AICS4) (FILTERiT4 Live Galaxy ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Frame  ver4.2 for Win AICS4) (FILTERiT4 Live Frame ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Explosion  ver4.2 for Win AICS4) (FILTERiT4 Live Explosion ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Emboss  ver4.2 for Win AICS4) (FILTERiT4 Live Emboss ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Cutout  ver4.2 for Win AICS4) (FILTERiT4 Live Cutout ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Circle  ver4.2 for Win AICS4) (FILTERiT4 Live Circle ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Border  ver4.2 for Win AICS4) (FILTERiT4 Live Border ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Flat/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
u
*u
0 O
0 0 1 0 k
0 J 0 j 1 w 4 M []0 d1 XR
200.603 268.2861 m
213.3843 270.5811 227.6309 270.6514 238.0698 264.8223 C
247.001 259.833 253.7715 249.0215 247.1777 234.8945 C
242.9155 225.7627 231.876 224.2422 225.5879 225.0625 C
211.8403 226.8545 200.876 238.2334 193.5459 250.1025 C
188.5811 258.1367 189.5776 266.2998 200.603 268.2861 C
200.603 268.2861 L
f
1 D
264.6055 328.916 m
264.6055 328.916 L
260.4756 376.3643 202.2344 323.332 182.5493 333.8335 C
172.7051 339.083 188.502 345.749 200.1631 354.7114 C
233.9019 380.6348 163.356 418.2222 157.6172 377.8711 C
154.188 353.8042 98.9971 347.9492 85.936 374.0933 C
52.9429 440.1016 12.042 390.1709 54.3662 353.4927 C
64.7246 344.5166 72.8682 335.0918 73.6724 326.6963 C
76.25 299.8438 41.2202 332.4629 34.521 314.2705 C
27.8286 296.0762 61.0923 302.7349 57.4189 282.54 C
53.7456 262.3428 4.3125 260.2139 8.72656 240.374 C
13.1411 220.5293 68.2446 272.1182 66.8682 240.0654 C
66.3511 228.0439 54.7495 221.7227 43.4009 215.7334 C
-56.9658 162.79 63.604 54.3213 83.6338 177.7002 C
86.1919 193.4648 88.5615 210.501 98.4082 215.5 C
123.6201 228.292 98.5674 176.5596 112.395 177.4639 C
119.3091 177.9199 121.1006 190.2451 123.7168 201.3916 C
126.333 212.5371 129.7773 222.499 139.9941 218.2266 C
146.4209 215.5371 149.7178 193.7236 162.6123 190.6729 C
178.1709 186.9912 201.8335 203.8154 184.9888 225.3428 C
181.397 229.9365 169.3662 242.8486 171.4658 256.291 C
179.5498 308.0439 267.3413 297.4619 264.6055 328.916 C
264.6055 328.916 L
f
0 D
27.1138 326.8716 m
27.1138 326.8716 L
37.6909 315.3428 16.8525 303.5508 1.41748 308.8047 C
-24.3467 317.585 3.82324 352.2578 27.1138 326.8716 C
f
*U
0 0 0 0 k
199.7808 263.2617 m
213.9731 264.9951 233.3501 263.8281 239.9775 249.5996 C
242.6099 243.9453 241.6445 235.2354 237.4766 231.6641 C
243.2549 234.123 245.9673 245.1904 242.8281 251.1758 C
235.3921 265.3506 214.5376 266.2197 199.7808 263.2617 C
f
25.5005 143.4941 m
11 151.001 9.84766 171.7646 17.3896 184.9893 C
27.9214 203.4521 44.0825 201.9434 68.7979 226.3047 C
54.9063 206.9326 33.3047 198.7148 24.0459 188.1055 C
14.7871 177.4893 13.9019 153.8105 25.5005 143.4941 C
f
59.2217 295.9268 m
76.4497 289.9014 73.9497 277.4521 57.1831 266.3652 C
65.2207 275.5127 73.9473 286.333 59.2217 295.9268 C
f
168.2954 199.2031 m
174.2295 205.2578 155.0137 207.9775 144.3413 228.2637 C
147.8579 215.125 162.3647 193.1563 168.2954 199.2031 C
f
104.2305 229.4287 m
110.1782 232.5107 115.9556 226.8701 118.208 223.5986 C
120.1665 226.9043 126.9995 231.8711 134.4893 231.1445 C
128.2925 231.0088 118.6133 222.6563 118.4272 218.9307 C
116.3677 223.8887 110.6943 230.6084 104.2305 229.4287 C
f
183.4009 294.376 m
191.1445 299.2979 198.9526 302.6582 212.8857 308.1636 C
228.4478 314.3149 247.6621 318.4946 251.8872 324.6738 C
254.8911 329.0615 258.6782 339.0542 242.2705 337.5093 C
248.7764 336.9199 251.4434 334.0996 251.4316 331.0791 C
251.3887 323.4688 237.0464 318.9688 225.4575 315.3301 C
212.6743 311.313 193.1465 304.4414 183.4009 294.376 C
f
64.8911 384.1289 m
68.7549 386.8613 80.0835 361.0659 86.7412 353.2231 C
79.2588 361.3286 61.0259 381.3931 64.8911 384.1289 C
f
-0.785156 330.1602 m
11.855 336.1416 24.3164 325.4971 26.6387 319.0229 C
25.0068 329.7852 6.28125 337.7729 -0.785156 330.1602 C
f
U
u
196.1606 82.4551 m
187.9106 72.9482 178.1489 58.248 180.6777 46.4697 C
181.6851 41.7852 185.8901 38.2393 189.6138 39.5381 C
185.5103 36.5225 179.3804 39.9492 178.4995 45.1553 C
176.4214 57.501 187.0938 73.1357 196.1606 82.4551 C
f
*u
1 0 0 0 k
174.4258 234.5127 m
162.3984 236.6113 149.6968 241.2832 142.0576 250.2041 C
135.522 257.8418 132.5581 270.2061 142.4302 281.2275 C
148.814 288.3535 159.0679 286.1084 164.4341 283.2471 C
176.1621 276.999 182.6982 262.7129 185.8589 249.1709 C
188.001 240.0068 184.8008 232.7021 174.4258 234.5127 C
174.4258 234.5127 L
f
1 D
85.6504 92.1875 m
85.6504 92.1875 L
93.7822 32.0762 171.7456 76.0869 142.6323 108.1172 C
125.1895 127.3057 81.9541 119.4873 85.6504 92.1875 C
85.6504 92.1875 L
f
193.769 85.459 m
193.769 85.459 L
185.644 76.8545 177.6958 65.9844 174.4951 55.0068 C
171.7559 45.6143 172.811 34.8994 182.7632 32.7119 C
189.1943 31.2939 196.0039 38.9648 199.1348 44.1963 C
205.9736 55.6367 206.998 69.8604 205.7842 81.5498 C
204.9629 89.4629 200.7749 92.8818 193.769 85.459 C
193.769 85.459 L
f
100.2759 199.0742 m
100.2759 199.0742 L
90.5063 153.3184 157.3745 183.5615 171.9209 167.1963 C
179.1953 159.0117 163.2456 158.0283 150.3262 153.5215 C
112.9487 140.4912 165.0913 81.8789 181.6353 117.7158 C
187.0718 129.4863 200.9341 143.4717 205.0547 133.4434 C
213.4214 113.0615 194.0386 94.665 203.9688 94.0439 C
213.8999 93.4219 213.0684 130.6621 231.1821 123.4258 C
240.5435 119.6836 244.832 108.8594 246.5073 97.418 C
257.1704 24.7061 307.7246 57.8145 280.4448 106.1934 C
273.77 118.0313 269.1904 129.5576 270.8564 137.6758 C
276.1699 163.6514 298.1055 121.4951 309.2236 136.2842 C
320.3379 151.0771 288.8418 155.9082 297.833 173.5771 C
306.8271 191.2461 351.4316 176.8057 353.125 196.832 C
354.8184 216.8604 291.1514 186.9238 301.46 216.4473 C
305.3262 227.5215 317.4463 229.5791 329.2432 231.4072 C
433.583 247.5645 357.002 389.1079 304.21 280.3584 C
297.4648 266.46 290.5273 251.3135 280.3462 249.9131 C
254.2813 246.3252 291.2383 286.3896 278.6758 290.1396 C
272.3936 292.0146 267.3052 281.0801 261.8184 271.5205 C
256.3306 261.9668 250.4434 253.792 242.5576 261.1875 C
237.6006 265.8389 240.8477 287.3379 230.2344 294.4795 C
217.4277 303.0962 191.5991 295.2236 200.4902 269.4863 C
202.3862 263.998 209.438 247.918 203.7583 236.042 C
181.8975 190.3213 106.7524 229.4053 100.2759 199.0742 C
100.2759 199.0742 L
f
0 D
312.2471 122.0342 m
312.2471 122.0342 L
306.0986 136.3359 327.9893 140.4385 340.2383 130.3916 C
360.6846 113.6133 325.7832 90.5449 312.2471 122.0342 C
f
*U
0 0 0 0 k
176.5815 238.9365 m
163.4556 242.0332 146.5405 249.5684 144.6733 265.0811 C
143.9326 271.2432 147.2607 279.0703 151.9819 281.0254 C
146.1406 280.6455 140.5913 271.1953 141.6904 264.5537 C
144.2915 248.8213 162.6079 241.0771 176.5815 238.9365 C
f
123.6479 68.5977 m
98.6499 65.9453 91.2383 92.8652 94.5386 105.8994 C
85.7412 85.6514 105.2271 59.4971 123.6479 68.5977 C
f
365.6494 293.0283 m
376.4258 281.1855 371.5693 261.3799 361.1055 251.5186 C
346.501 237.748 332.543 244.5332 303.6416 229.9609 C
321.4941 243.4629 343.0527 243.9678 354.2998 250.8164 C
365.5479 257.667 373.0469 279.5234 365.6494 293.0283 C
f
292.4346 161.6533 m
278.8096 173.0195 284.562 183.832 302.6289 188.6289 C
292.8818 182.7432 282.0469 175.5225 292.4346 161.6533 C
f
222.7588 288.3896 m
215.7607 284.6973 232.0942 275.7646 235.8452 253.2432 C
236.4365 266.7031 229.751 292.0752 222.7588 288.3896 C
f
271.2188 238.8184 m
265.0493 237.9131 261.5073 245.1094 260.4268 248.9189 C
257.7466 246.4795 250.2583 244.1045 243.7974 247.2734 C
249.3511 245.3379 260.3359 249.9346 261.5571 253.3564 C
261.9834 248.0361 265.1304 239.8623 271.2188 238.8184 C
f
182.3438 204.3877 m
174.0562 202.3564 166.1543 201.8096 152.1934 201.292 C
136.5977 200.7109 118.3115 203.1914 112.7993 198.8145 C
108.8809 195.708 102.6782 187.6201 117.7222 183.6104 C
112.0986 186.3232 110.522 189.8516 111.3887 192.6709 C
113.582 199.7754 127.6245 199.2168 138.9731 198.7686 C
151.4883 198.2754 170.8184 198.2119 182.3438 204.3877 C
f
262.3945 81.0361 m
258.1826 79.7627 255.4082 107.6592 251.7046 117.208 C
256.0679 107.1387 266.6138 82.3086 262.3945 81.0361 C
f
336.1465 109.6816 m
323.2021 108.2891 315.126 122.3906 314.8936 129.2188 C
313.2979 118.6094 327.7012 104.9131 336.1465 109.6816 C
f
U
u
u
u
*u
1 D
0 0 0 1 k
344.1143 421.9502 m
359.9277 425.5547 376.6807 432.4009 386.8896 444.0986 C
395.624 454.1094 399.7725 469.6875 387.0664 482.5347 C
378.8516 490.8394 365.3574 487.2036 358.2607 483.2129 C
342.751 474.4932 333.873 456.2314 329.4395 439.1792 C
326.4326 427.6377 330.4697 418.8472 344.1143 421.9502 C
344.1143 421.9502 L
f
0 D
440.5674 384.1636 m
440.5674 384.1636 L
452.3916 328.2388 365.373 360.189 345.9502 338.686 C
336.2363 327.9346 357.127 328.0391 373.9668 323.5234 C
422.6943 310.4683 353.0674 233.46 332.1484 276.5225 C
319.666 302.2065 252.8086 282.0264 246.6572 245.9697 C
231.1138 154.9219 165.5444 191.7783 202.3506 254.0322 C
211.3594 269.2686 217.6094 283.9385 215.6016 293.8691 C
209.1938 325.6367 179.5264 271.54 165.2681 288.958 C
151.0142 306.377 192.4121 314.9839 181.0044 336.1465 C
169.5942 357.3115 110.8008 335.7017 109.0122 360.3911 C
107.2217 385.0874 190.0503 353.251 177.1709 389.0059 C
172.3403 402.415 156.4951 403.96 141.0654 405.2461 C
4.61523 416.6201 108.0664 598.4922 174.9414 468.0249 C
183.4844 451.3535 192.2554 433.1465 205.5742 432.2544 C
239.6694 429.9702 192.0762 476.582 208.6294 482.2754 C
216.9077 485.1216 223.3423 471.9829 230.3296 460.5889 C
237.3174 449.1953 244.8623 439.5498 255.3594 449.373 C
261.958 455.5508 258.165 481.9419 272.2344 491.6772 C
289.209 503.4253 322.9023 495.8066 310.6904 463.1563 C
308.0889 456.1919 298.499 435.6694 305.6875 421.4121 C
333.3662 366.5342 432.7285 421.2368 440.5674 384.1636 C
440.5674 384.1636 L
f
1 D
160.9976 271.0361 m
160.9976 271.0361 L
169.3662 289.2793 140.7539 292.5498 124.4775 279.0732 C
97.3101 256.5742 142.5732 230.8662 160.9976 271.0361 C
f
*U
0 D
0 0 0 0 k
341.3818 427.2578 m
358.6582 432.1855 380.9971 442.936 383.7783 462.3257 C
384.8848 470.0288 380.6885 479.4585 374.54 481.4893 C
382.1895 481.5063 389.2627 470.2485 387.6807 461.9194 C
383.9287 442.1973 359.748 431.0718 341.3818 427.2578 C
f
94.6616 478.6372 m
80.2764 463.0586 86.2197 438.9014 99.7231 427.54 C
118.5771 411.6797 137.0225 421.2495 174.6011 405.5806 C
151.4858 420.8408 123.2324 419.6777 108.6323 427.2358 C
94.0308 434.7959 84.6709 461.2754 94.6616 478.6372 C
f
187.8232 321.8086 m
205.9341 337.0327 198.625 349.9634 175.0415 354.4131 C
187.6943 347.9224 201.7417 339.8687 187.8232 321.8086 C
f
281.9043 484.7466 m
290.999 480.7515 269.3926 468.3188 263.9907 440.0771 C
263.5029 456.7173 272.8164 488.7358 281.9043 484.7466 C
f
217.3013 419.2539 m
225.3706 418.6426 230.1694 427.8633 231.668 432.6758 C
235.1274 429.8716 244.895 427.5483 253.4346 432.0171 C
246.1113 429.1572 231.8096 433.9434 230.2822 438.085 C
229.606 431.4502 225.3052 421.0542 217.3013 419.2539 C
f
333.084 383.9395 m
343.9072 382.1099 354.2539 382.0879 372.5488 382.6025 C
392.9824 383.1763 417.0107 387.771 424.1445 382.8022 C
429.2119 379.2744 437.1719 369.7622 417.3643 363.5415 C
424.7939 367.3716 426.9365 371.8755 425.8604 375.3003 C
423.1367 383.9277 404.7148 382.0703 389.8262 380.5708 C
373.4072 378.9224 348.0625 377.2368 333.084 383.9395 C
f
225.4736 224.3359 m
230.9697 223.1074 235.21 257.9287 240.269 270.0771 C
234.334 257.2305 219.9746 225.5654 225.4736 224.3359 C
f
129.396 253.7354 m
146.3384 253.083 157.2305 271.2393 157.6812 279.7256 C
159.5469 266.7021 140.3672 248.5225 129.396 253.7354 C
f
U
0 0 0 1 k
91.957 351.1914 m
43.5356 315.7319 21.5425 385.0874 64.3076 391.1689 C
89.9287 394.8096 113.9502 367.2925 91.957 351.1914 C
f
0 0 0 0 k
49.127 355.2749 m
64.3506 340.5957 88.6152 354.5278 95.6489 364.8345 C
87.2349 346.9233 55.25 339.7432 49.127 355.2749 C
f
0 0 0 1 k
290.8027 524.71 m
276.5347 568.0596 327.7891 570.6523 323.3418 537.415 C
320.6768 517.5024 297.2813 505.0215 290.8027 524.71 C
f
0 0 0 0 k
302.1299 555.9629 m
289.167 547.5 293.7256 526.5439 299.2822 519.2163 C
288.8647 529.0986 290.4121 554.4849 302.1299 555.9629 C
f
U
0 0 0 1 k
237.9375 499.8262 m
219.6387 516.1099 243.1826 532.4731 249.9365 515.4443 C
253.9829 505.2422 246.2471 492.4312 237.9375 499.8262 C
f
0 0 0 0 k
234.9648 517.9487 m
231.0908 510.1201 238.8296 501.5571 243.4102 499.7334 C
235.8511 501.3296 229.8184 513.79 234.9648 517.9487 C
f
U
u
u
0 1 0 0 k
428.374 411.5459 m
426.4756 467.5942 492.0381 460.1362 474.0977 420.3574 C
463.3496 396.5244 429.2324 386.0908 428.374 411.5459 C
f
489.876 295.4756 m
508.0527 297.1963 528.502 301.7769 543.9121 311.4233 C
557.0996 319.6772 567.6055 333.4561 559.1709 346.4102 C
553.7168 354.7856 537.9805 352.8086 528.8926 349.874 C
509.0273 343.4639 492.458 327.708 481.0674 312.6177 C
473.3574 302.4019 474.1934 293.9951 489.876 295.4756 C
f
0 0 0 0 k
489.0596 300.5801 m
509.3086 303.3623 537.2109 310.9448 547.7607 328.3306 C
551.9521 335.2368 551.2031 344.2397 545.4775 346.6968 C
553.5947 345.9546 556.6816 335.0034 551.7393 327.5742 C
540.0273 309.9829 510.0273 302.2393 489.0596 300.5801 C
f
454.2451 447.4702 m
434.7695 439.7959 432.7373 413.1885 437.0195 403.061 C
427.5596 417.3252 438.9297 448.0903 454.2451 447.4702 C
f
u
0 1 0 0 k
463.0977 128.708 m
474.6729 124.4688 486.8867 117.4639 494.2012 106.9463 C
500.4648 97.9473 503.2568 84.6924 493.7002 75.04 C
487.5244 68.7939 477.6533 72.8818 472.499 76.7451 C
461.2324 85.2109 455.0029 101.0703 452.0225 115.5703 C
450.001 125.3857 453.1162 132.3623 463.0977 128.708 C
f
0 0 0 0 k
465.6465 125.1006 m
477.6797 119.9004 493.1719 109.7217 494.8184 94.1777 C
495.4707 87.9961 492.3848 80.8594 488.04 79.7158 C
493.4023 79.126 498.5361 87.499 497.5605 94.2012 C
495.2383 110.083 478.4609 120.7031 465.6465 125.1006 C
f
U
u
266.959 342.9805 m
255.3662 349.4189 240.5435 361.0054 239.3945 375.9482 C
238.939 381.8892 242.1641 388.2705 246.4365 388.8081 C
241.2192 390.0396 235.9614 382.7451 236.7168 376.2715 C
238.5137 360.9219 254.5786 348.7529 266.959 342.9805 C
f
*u
1 D
0 1 0 0 k
293.1006 156.0537 m
281.3091 147.0615 269.6401 134.7451 264.5776 120.2959 C
260.2466 107.9346 261.1353 92.083 274.8945 84.7881 C
283.7886 80.0723 293.6997 88.2637 298.3457 94.4854 C
308.501 108.0889 310.7021 128.1084 309.6426 145.4248 C
308.9297 157.1445 303.2754 163.8047 293.1006 156.0537 C
293.1006 156.0537 L
f
0 D
155.54 271.3838 m
155.54 271.3838 L
144.7271 345.0313 239.6187 336.9712 219.6953 284.1875 C
207.7593 252.5625 160.4482 237.9375 155.54 271.3838 C
155.54 271.3838 L
f
1 D
265.4395 338.2144 m
275.0791 333.5 278.3262 339.7231 276.6416 349.2827 C
274.1592 363.4033 268.5435 379.2183 257.7954 388.6514 C
252.8779 392.9634 243.3638 398.0703 237.1523 392.9238 C
227.5371 384.9688 229.873 372.0566 235.7197 362.7397 C
242.5508 351.8525 254.2676 343.6821 265.4395 338.2144 C
265.4395 338.2144 L
265.4395 338.2144 L
f
0 D
204.9097 156.3281 m
204.9097 156.3281 L
180.1377 203.6641 259.1235 205.3877 268.958 232.1797 C
273.8779 245.5762 257.0347 237.9932 242.2021 236.1191 C
199.293 230.6963 234.5732 326.667 263.1895 294.4512 C
272.5918 283.8701 291.4355 275.3457 292.4966 289.1416 C
294.6445 317.1797 268.668 327.7661 278.7593 333.9067 C
288.8545 340.0522 299.9131 296.7231 316.3682 314.9512 C
324.874 324.376 325.8535 339.1821 323.9297 353.2686 C
311.7061 442.8022 374.6992 432.3159 361.9102 361.7129 C
358.7813 344.4365 357.7227 328.665 362.0488 320.2275 C
375.8711 293.2295 385.1123 353.7485 401.3682 342.7969 C
417.6211 331.8423 386.5264 309.0684 401.498 293.6416 C
416.4756 278.2158 458.083 319.2139 466.2471 297.0859 C
474.4121 274.9531 398.8457 274.626 418.9785 246.2686 C
426.5313 235.6338 439.75 239.8887 452.5625 244.2324 C
565.8721 282.6504 531.8057 77.8535 442.2852 174.1973 C
430.8467 186.5098 418.8066 200.1563 407.8086 196.2061 C
379.6455 186.0908 430.7734 160.1631 418.9521 148.9834 C
413.0391 143.3906 404.2676 153.2002 395.5225 161.2041 C
386.7754 169.2041 378.0596 175.3975 372.252 162.5762 C
368.6035 154.5107 378.8496 131.5332 370.1348 117.5166 C
359.6201 100.5967 330.333 95.5449 331.3096 130.0332 C
331.5186 137.3867 333.6787 159.751 323.9922 170.3213 C
286.7007 211.0078 221.3325 124.9482 204.9097 156.3281 C
204.9097 156.3281 L
f
1 D
399.9404 360.8545 m
399.9404 360.8545 L
398.1455 341.0313 422.1445 348.271 431.625 366.5327 C
447.4463 397.019 403.8906 404.5039 399.9404 360.8545 C
f
*U
0 D
0 0 0 0 k
296.7529 152.1367 m
284.1392 141.3994 269.021 123.4814 272.0508 104.6025 C
273.2539 97.1016 279.209 89.9111 284.728 90.2393 C
278.5527 87.4854 269.7749 95.333 268.7886 103.5781 C
266.4502 123.1123 282.9556 142.0381 296.7529 152.1367 C
f
187.3716 319.3091 m
160.6108 308.7002 161.5483 273.6572 169.1411 260.4561 C
153.542 278.9619 165.3657 319.7178 187.3716 319.3091 C
f
510.0176 193.1865 m
517.3975 212.707 506.0205 232.8545 492.0225 238.4902 C
472.4785 246.3613 460.1846 230.9248 425.5654 231.9072 C
448.3896 226.1172 470.8945 237.3164 484.7441 235.5791 C
498.5957 233.8398 513.3613 212.7764 510.0176 193.1865 C
f
392.0879 304.4185 m
381.6035 283.8896 391.0273 274.583 411.2861 278.9307 C
399.2998 280.3828 385.7607 282.7744 392.0879 304.4185 C
f
360.4395 120.4414 m
352.0049 120.8652 366.0732 140.0752 362.752 168.0537 C
367.6748 152.8828 368.8633 120.0186 360.4395 120.4414 C
f
394.7959 203.9912 m
388.1133 201.6621 386.7471 191.4395 386.8467 186.4648 C
383.2871 187.8115 374.7666 186.4512 369.084 179.2705 C
374.2217 184.5322 387.0752 185.2451 389.4355 181.9727 C
388.1768 188.332 388.8213 199.4609 394.7959 203.9912 C
f
291.667 195.0596 m
282.4258 192.8672 274.0615 189.1797 259.4253 182.1455 C
243.0771 174.292 224.9185 161.4453 217.8042 163.4697 C
212.751 164.9053 203.7339 170.8281 218.0415 183.6621 C
213.0796 177.4648 212.5757 172.5459 214.3774 169.7725 C
218.9243 162.792 233.3003 171.1094 244.916 177.8281 C
257.7295 185.2324 277.7432 195.8711 291.667 195.0596 C
f
335.1514 380.811 m
330.377 379.9736 336.4297 346.3428 335.6484 333.3257 C
336.9482 347.2998 339.9297 381.6499 335.1514 380.811 C
f
420.7559 388.1367 m
406.8936 382.665 403.0381 362.0186 404.9824 354.0332 C
399.9316 365.3711 410.4775 389.0127 420.7559 388.1367 C
f
U
U
0 1 0 0 k
411.9092 117.5615 m
434.3252 103.0508 413.4756 76.7021 402.8428 95.3525 C
396.4727 106.5254 401.7285 124.1533 411.9092 117.5615 C
f
0 0 0 0 k
418.8652 96.5313 m
421.1953 107.0635 411.3555 115.2217 406.2285 116.1387 C
414.3887 116.332 423.2979 102.9932 418.8652 96.5313 C
f
0 1 0 0 k
364.5527 71.9365 m
369.9111 65.0557 374.7012 56.3066 375.4072 47.3467 C
376.0146 39.6797 373.126 30.8242 364.2031 28.7676 C
358.4355 27.4326 354.0264 33.5781 352.3154 37.8057 C
348.582 47.0547 350.3408 58.7451 353.5439 68.4043 C
355.7109 74.9434 359.9307 77.8691 364.5527 71.9365 C
f
0 0 0 0 k
364.8184 68.8477 m
370.1182 61.2275 375.751 49.3701 371.4053 39.6016 C
369.6758 35.7178 365.4189 32.6885 362.4736 33.6631 C
365.4248 31.2842 371.3086 34.2637 373.0264 38.5762 C
377.0908 48.7988 370.8525 61.4043 364.8184 68.8477 C
f
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
